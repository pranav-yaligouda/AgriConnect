{"version":3,"file":"FAQ-B3XM7eU9.js","sources":["../../src/pages/FAQ.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Container,\n  Typography,\n  Paper,\n  Box,\n  Grid,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Button,\n  useTheme,\n  useMediaQuery,\n} from '@mui/material';\nimport {\n  ExpandMore,\n  QuestionAnswer,\n  Support,\n  Security,\n} from '@mui/icons-material';\nimport { containerPadding, paperStyle } from '../utils/styleUtils';\nimport { useTranslation } from 'react-i18next';\n\nconst FAQ = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const [expanded, setExpanded] = useState<string | false>(false);\n  const { t } = useTranslation('faq');\n\n  // Dynamically get all categories and questions\n  const categories = t('categories', { returnObjects: true });\n\n  // Only include non-admin categories\n  const filteredCategories = Object.fromEntries(\n    Object.entries(categories).filter(([catKey]) => catKey !== 'admin')\n  );\n\n  // Optional: icon mapping for categories\n  const iconMap: Record<string, React.ReactNode> = {\n    general: <QuestionAnswer color=\"primary\" sx={{ fontSize: 30, mr: 2 }} />,\n    support: <Support color=\"primary\" sx={{ fontSize: 30, mr: 2 }} />,\n  };\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ ...containerPadding }}>\n      {/* Hero Section */}\n      <Box sx={{ mb: 6, textAlign: 'center' }}>\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom fontWeight=\"bold\">\n          {t('title')}\n        </Typography>\n        <Typography variant=\"h6\" color=\"text.secondary\" sx={{ maxWidth: 800, mx: 'auto' }}>\n          {t('intro')}\n        </Typography>\n      </Box>\n\n      {/* FAQ Categories */}\n      <Grid container spacing={4}>\n        {Object.entries(filteredCategories).map(([catKey, catValue]: any, index) => (\n          <Grid item xs={12} md={6} key={catKey}>\n            <Paper sx={{ ...paperStyle, height: '100%' }}>\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n                {iconMap[catKey]}\n                <Typography variant=\"h5\" fontWeight=\"bold\">\n                  {catValue.title}\n                </Typography>\n              </Box>\n              {Object.entries(catValue.questions).map(([qKey, qVal]: any, qIndex) => {\n                if (qKey.endsWith('-answer')) return null;\n                const answerKey = `${qKey}-answer`;\n                return (\n                  <Accordion\n                    key={qKey}\n                    expanded={expanded === `panel-${catKey}-${qKey}`}\n                    onChange={(_e, isExp) => setExpanded(isExp ? `panel-${catKey}-${qKey}` : false)}\n                    sx={{\n                      mb: 2,\n                      '&:before': { display: 'none' },\n                    }}\n                  >\n                    <AccordionSummary\n                      expandIcon={<ExpandMore />}\n                      sx={{\n                        backgroundColor: theme.palette.background.paper,\n                        borderRadius: 1,\n                      }}\n                    >\n                      <Typography variant=\"subtitle1\" fontWeight=\"medium\">\n                        {qVal}\n                      </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {catValue.questions[answerKey]}\n                      </Typography>\n                    </AccordionDetails>\n                  </Accordion>\n                );\n              })}\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n\n      {/* Additional Support Section */}\n      <Paper sx={{ ...paperStyle, mt: 6, p: 4 }}>\n        <Box sx={{ textAlign: 'center' }}>\n          <Typography variant=\"h5\" gutterBottom fontWeight=\"bold\">\n            {t('additional-support.title')}\n          </Typography>\n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n            {t('additional-support.text')}\n          </Typography>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            sx={{\n              borderRadius: 2,\n              py: 1.5,\n              px: 4,\n              fontWeight: 'bold',\n            }}\n            href=\"/contact\"\n          >\n            {t('additional-support.button')}\n          </Button>\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default FAQ;"],"names":["FAQ","theme","useTheme","useMediaQuery","expanded","setExpanded","useState","t","useTranslation","categories","filteredCategories","catKey","iconMap","jsx","QuestionAnswer","Support","jsxs","Container","containerPadding","Box","Typography","Grid","catValue","index","Paper","paperStyle","qKey","qVal","qIndex","answerKey","Accordion","_e","isExp","AccordionSummary","ExpandMore","AccordionDetails","Button"],"mappings":"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"}