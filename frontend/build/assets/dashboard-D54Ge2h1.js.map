{"version":3,"file":"dashboard-D54Ge2h1.js","sources":["../../src/services/apiService.ts","../../node_modules/@mui/icons-material/Delete.js","../../src/components/dashboard/ImageUpload.tsx","../../node_modules/@mui/icons-material/Dashboard.js","../../node_modules/@mui/icons-material/Add.js","../../node_modules/@mui/icons-material/Inventory.js","../../node_modules/@mui/icons-material/AccessTime.js","../../node_modules/@mui/icons-material/LocalShipping.js","../../node_modules/@mui/icons-material/ShoppingCart.js","../../node_modules/@mui/icons-material/Person.js","../../node_modules/@mui/icons-material/CalendarToday.js","../../src/pages/Dashboard.tsx","../../src/pages/Profile.tsx"],"sourcesContent":["// --- API Service Layer ---\n// Centralized API handler for all endpoints\nimport api from '../utils/axiosConfig';\nimport { LoginResponse } from '../pages/interfaces';\n\n\n// ----check exisiting contact requests----\nexport const checkExistingContactRequest = async (\n  farmerId: string,\n  productId: string,\n  timestamp?: number\n) => {\n  try {\n    const response = await api.get(\n      `/contact-requests/status/${farmerId}/${productId}${timestamp ? `?t=${timestamp}` : ''}`\n    );\n    return response.data;\n  } catch (error: any) {\n    console.error('Check existing request failed:', error);\n    return { exists: false };\n  }\n};\n\n// ---- Contact Requests ----\nexport async function createContactRequest(productId: string, requestedQuantity: number): Promise<{ message: string; existingRequestId?: string }> {\n  try {\n    const res = await api.post('/contact-requests/create', { productId, requestedQuantity });\n    return res.data;\n  } catch (error: any) {\n    if (error.response?.status === 409) {\n      return { \n        message: 'Request already exists',\n        existingRequestId: error.response.data.existingRequestId\n      };\n    }\n    // Handle 429 error (Too Many Requests)\n    if (error.response?.status === 429) {\n      throw new Error(error.response.data?.message || 'You have reached your daily contact request limit. Please try again tomorrow.');\n    }\n    throw error;\n  }\n}\n\n\nexport async function fetchMyContactRequests(): Promise<{ sent: any[]; received: any[]; pendingFarmers: string[] }> {\n  const res = await api.get('/contact-requests/my');\n  return res.data;\n}\n\n\n\n// ---- Auth ----\nexport const acceptContactRequest = (id: string) =>\n  api.put(`/contact-requests/${id}/accept`);\nexport const rejectContactRequest = (id: string) =>\n  api.put(`/contact-requests/${id}/reject`);\n\nexport async function loginUser(values: { email: string; password: string }): Promise<LoginResponse> {\n  try {\n    const response = await api.post<LoginResponse>('/users/login', values);\n    return response.data;\n  } catch (error: any) {\n    throw normalizeApiError(error);\n  }\n}\n\n// ---- User Registration ----\nexport async function registerUser(values: any): Promise<any> {\n  try {\n    const response = await api.post('/users/register', values);\n    return response.data;\n  } catch (error: any) {\n    throw normalizeApiError(error);\n  }\n}\n\nexport async function generateUsername(name: string): Promise<{ username: string }> {\n  try {\n    const response = await api.post('/users/generate-username', { name });\n    return response.data as { username: string };\n  } catch (error: any) {\n    throw normalizeApiError(error);\n  }\n}\n\n// ---- Posts ----\nexport async function fetchPosts(): Promise<any[]> {\n  try {\n    const response = await api.get('/posts');\n    return response.data as any[];\n  } catch (error: any) {\n    throw normalizeApiError(error);\n  }\n}\n\n// ---- Profile ----\nexport async function fetchUserProfile(): Promise<any> {\n  try {\n    const response = await api.get('/users/profile');\n    return response.data;\n  } catch (error: any) {\n    throw normalizeApiError(error);\n  }\n}\n\nexport async function updateProfile(editForm: any): Promise<any> {\n  try {\n    const response = await api.patch('/users/profile', editForm);\n    return response.data;\n  } catch (error: any) {\n    throw normalizeApiError(error);\n  }\n}\n\n// Upload only profile image (base64)\nexport async function uploadProfileImage(base64: string, contentType: string): Promise<any> {\n  try {\n    const response = await api.patch('/users/profile', {\n      profileImage: { data: base64, contentType },\n    });\n    return response.data;\n  } catch (error: any) {\n    throw normalizeApiError(error);\n  }\n}\n\nexport async function deleteProfile(): Promise<void> {\n  try {\n    await api.delete('/users/profile');\n  } catch (error: any) {\n    throw normalizeApiError(error);\n  }\n}\n\n// ---- Products ----\n// Define Product type locally to avoid circular dependency\n// AFTER (Robust error handling)\nexport async function fetchMyProducts(config?: { signal?: AbortSignal }): Promise<Product[]> {\n  try {\n    const response = await api.get('/products/farmer/my-products', {\n      signal: config?.signal\n    });\n    return response.data;\n  } catch (error: any) {\n    if (error.name === 'CanceledError') return [];\n    if (error.response?.status === 403) {\n      // Silent handling for non-farmer roles\n      console.log('Access denied to farmer products');\n      return [];\n    }\n    // Preserve existing error handling for other cases\n    throw normalizeApiError(error);\n  }\n}\n\nexport async function fetchCategories(): Promise<string[]> {\n  try {\n    const response = await api.get('/products/categories');\n    return Array.isArray(response.data) ? response.data : [];\n  } catch (error: any) {\n    throw normalizeApiError(error);\n  }\n}\n\nexport interface Product {\n  _id: string;\n  name: string;\n  description: string;\n  price: number;\n  unit: string;\n  images: string[];\n  isOrganic: boolean;\n  availableQuantity: number;\n  harvestDate: string;\n  farmer: {\n    name: string;\n    address: {\n      district: string;\n      state: string;\n    };\n  };\n  location: {\n    district: string;\n    state: string;\n  };\n}\n\n\nexport async function fetchProducts(params?: Record<string, any>): Promise<{ products: Product[]; total: number; page: number; pageCount: number }> {\n  try {\n    const response = await api.get('/products', { params });\n    // Defensive: always return a paginated object\n    if (response.data && Array.isArray(response.data.products)) {\n      return response.data;\n    }\n    // Fallback for legacy: wrap array in paginated object\n    return {\n      products: Array.isArray(response.data) ? response.data as Product[] : [],\n      total: Array.isArray(response.data) ? response.data.length : 0,\n      page: 1,\n      pageCount: 1\n    };\n  } catch (error: any) {\n    throw normalizeApiError(error);\n  }\n}\n\nexport async function addProduct(productData: any): Promise<any> {\n  try {\n    const response = await api.post('/products', productData);\n    return response.data;\n  } catch (error: any) {\n    throw normalizeApiError(error);\n  }\n}\n\nexport async function deleteProduct(productId: string): Promise<void> {\n  try {\n    await api.delete(`/products/${productId}`);\n  } catch (error: any) {\n    throw normalizeApiError(error);\n  }\n}\n\n// ---- Image Upload ----\nexport async function uploadImages(formData: FormData): Promise<any> {\n  try {\n    const response = await api.post('/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  } catch (error: any) {\n    throw normalizeApiError(error);\n  }\n}\n\n// ---- Dashboard ----\nexport async function fetchDashboardData(): Promise<any> {\n  try {\n    const response = await api.get('/users/dashboard');\n    return response.data;\n  } catch (error: any) {\n    throw normalizeApiError(error);\n  }\n}\n\n// ---- Users Directory ----\nexport async function fetchUsers(query?: string): Promise<any[]> {\n  try {\n    const url = query && query.trim()\n      ? `/users/all?q=${encodeURIComponent(query.trim())}`\n      : '/users/all';\n    const response = await api.get(url);\n    return Array.isArray(response.data) ? response.data : [];\n  } catch (error: any) {\n    throw normalizeApiError(error);\n  }\n}\n\n// ---- Contact Request Confirmation ----\n// User confirms purchase (final quantity, price, didBuy, feedback)\nexport async function confirmContactRequestAsUser(requestId: string, data: { finalQuantity: number; finalPrice: number; didBuy: boolean; feedback?: string }) {\n  return api.post(`/contact-requests/${requestId}/user-confirm`, data);\n}\n// Farmer confirms sale (final quantity, price, didSell, feedback)\nexport async function confirmContactRequestAsFarmer(requestId: string, data: { finalQuantity: number; finalPrice: number; didSell: boolean; feedback?: string }) {\n  return api.post(`/contact-requests/${requestId}/farmer-confirm`, data);\n}\n\n// ---- Admin Dispute Tools ----\n// Fetch all disputes (admin only)\nexport async function fetchDisputes() {\n  return api.get('/contact-requests/disputes');\n}\n// Admin resolves a dispute\nexport async function resolveDispute(requestId: string, data: { adminNote: string; resolution: string }) {\n  return api.post(`/contact-requests/${requestId}/admin-resolve`, data);\n}\n\n// ---- Admin API ----\n// Admin login (sends deviceFingerprint)\nexport async function adminLogin({ username, password, deviceFingerprint }: { username: string; password: string; deviceFingerprint: string }) {\n  return api.post('/admin/login', { username, password, deviceFingerprint });\n}\n// Admin: fetch all users\nexport async function fetchAdminUsers() {\n  return api.get('/users/admin/users');\n}\n// Admin: fetch all products\nexport async function fetchAdminProducts() {\n  return api.get('/users/admin/products');\n}\n// Admin: fetch logs\nexport async function fetchAdminLogs() {\n  return api.get('/users/admin/logs');\n}\n// Admin: fetch settings\nexport async function fetchAdminSettings() {\n  return api.get('/users/admin/settings');\n}\n\n// ---- Utility: Robust error normalization ----\nfunction normalizeApiError(error: any) {\n  // Handles axios and native errors gracefully\n  if (error && error.response) {\n    return {\n      message: error.response.data?.message || 'An error occurred',\n      details: error.response.data?.details,\n      status: error.response.status,\n    };\n  } else if (error && error.request) {\n    return {\n      message: 'No response received from server',\n      status: 0,\n    };\n  } else {\n    return {\n      message: error?.message || 'An error occurred',\n      status: 0,\n    };\n  }\n}\n\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import React from 'react';\nimport { Box, Typography, IconButton, Stack, Button } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\ninterface ImageUploadProps {\n  images: string[];\n  onImagesChange: (images: string[]) => void;\n  uploading: boolean;\n}\n\nconst ImageUpload: React.FC<ImageUploadProps> = ({ images, onImagesChange, uploading }) => {\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (!files || files.length === 0) return;\n    const readers = Array.from(files).map(file => {\n      return new Promise<string>((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result as string);\n        reader.onerror = reject;\n        reader.readAsDataURL(file);\n      });\n    });\n    Promise.all(readers).then(base64Images => {\n      onImagesChange([...images, ...base64Images]);\n    });\n  };\n\n  return (\n    <Box sx={{ mt: 2 }}>\n      <Button\n        variant=\"outlined\"\n        component=\"label\"\n        disabled={uploading}\n      >\n        Upload Images\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          multiple\n          hidden\n          onChange={handleInputChange}\n        />\n      </Button>\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2, overflowX: 'auto' }}>\n        {images.map((img, idx) => (\n          <Box key={img} sx={{ position: 'relative' }}>\n            <Box component=\"img\" src={img} sx={{ width: 100, height: 100, objectFit: 'cover', borderRadius: 1, border: '1px solid', borderColor: 'divider' }} />\n            <IconButton onClick={() => {\n              const updated = [...images];\n              updated.splice(idx, 1);\n              onImagesChange(updated);\n            }} sx={{ position: 'absolute', top: 4, right: 4, bgcolor: 'background.paper', color: 'error.main' }} size=\"small\">\n              <DeleteIcon fontSize=\"small\" />\n            </IconButton>\n          </Box>\n        ))}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default ImageUpload;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 13h8V3H3zm0 8h8v-6H3zm10 0h8V11h-8zm0-18v6h8V3z\"\n}), 'Dashboard');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 2H4c-1 0-2 .9-2 2v3.01c0 .72.43 1.34 1 1.69V20c0 1.1 1.1 2 2 2h14c.9 0 2-.9 2-2V8.7c.57-.35 1-.97 1-1.69V4c0-1.1-1-2-2-2m-5 12H9v-2h6zm5-7H4V4l16-.02z\"\n}), 'Inventory');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n}, \"1\")], 'AccessTime');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 8h-3V4H3c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5zM6 18.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5m13.5-9 1.96 2.5H17V9.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5\"\n}), 'LocalShipping');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2M1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H5.21l-.94-2zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2\"\n}), 'ShoppingCart');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'Person');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m0 18H4V8h16z\"\n}), 'CalendarToday');","import React, { useState, useEffect } from \"react\";\nimport { Box, Container, Grid, Typography, Tabs, Tab, Button, Snackbar, CircularProgress, Alert, Paper, TableContainer, Table, TableBody, TableCell, TableRow, TableHead, Dialog, DialogTitle, DialogContent, DialogActions, IconButton, Avatar, Chip, Divider, TextField, FormControl, InputLabel, Select, MenuItem, FormControlLabel, Switch } from \"@mui/material\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { fetchDashboardData, addProduct, deleteProduct, fetchProducts } from \"../services/apiService\";\nimport ImageUpload from \"../components/dashboard/ImageUpload\";\nimport { toast } from \"react-toastify\";\nimport DashboardIcon from \"@mui/icons-material/Dashboard\";\n\n\n// Utility function to get role-based profile placeholder\nfunction getRoleProfilePlaceholder(role?: string): string {\n  switch (role) {\n    case 'farmer':\n      return '/images/farmerProfilePlaceholder.png';\n    case 'vendor':\n      return '/images/vendorProfilePlaceholder.png';\n    default:\n      return '/images/userProfilePlaceholder.png';\n  }\n}\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport InventoryIcon from \"@mui/icons-material/Inventory\";\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\nimport LocalShipping from \"@mui/icons-material/LocalShipping\";\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\ninterface Product {\n  _id: string;\n  name: string;\n  description: string;\n  price: number;\n  unit: string;\n  category: string;\n  availableQuantity: number;\n  minimumOrderQuantity?: number | null;\n  isOrganic: boolean;\n  harvestDate: string;\n  images: string[];\n  location: {\n    district: string;\n    state: string;\n  };\n  isAvailable: boolean;\n  createdAt: string;\n}\n\ninterface Order {\n  _id: string;\n  date: string;\n  status: string;\n  items: Array<{\n    product: string;\n    quantity: number;\n    price: number;\n  }>;\n  totalAmount: number;\n  buyer: {\n    name: string;\n    location: string;\n  };\n}\n\ninterface User {\n  _id: string;\n  name: string;\n  role: \"user\" | \"farmer\" | \"vendor\" | \"admin\";\n  email: string;\n  phone: string;\n  address: {\n    street: string;\n    district: string;\n    state: string;\n    zipcode: string;\n  };\n  profileImage: string | { data: string, contentType: string };\n  profileImages?: string[];\n  joinDate: string;\n}\n\ninterface DashboardDataResponse {\n  user: User;\n  products: Product[];\n  orders: Order[];\n}\n\ninterface UploadResponse {\n  urls: Array<{ url: string }>;\n}\n\ninterface NewProductData {\n  name: string;\n  description: string;\n  price: number;\n  category: string;\n  availableQuantity: number;\n  minimumOrderQuantity?: number | null;\n  unit: string;\n  images: string[];\n  harvestDate: string;\n  isOrganic: boolean;\n  location: {\n    district: string;\n    state: string;\n  };\n}\n\nfunction getProfileImageSrc(user: User | null): string {\n  if (!user) return getRoleProfilePlaceholder();\n  const img = user.profileImage;\n\n  // Case 1: Object with base64 data\n  if (img && typeof img === \"object\" && \"data\" in img && \"contentType\" in img && img.data && img.contentType) {\n    return `data:${img.contentType};base64,${img.data}`;\n  }\n\n  // Case 2: String - data URL or non-placeholder URL\n  if (typeof img === \"string\" && img.length > 0) {\n    // Accept data URLs or any non-placeholder URLs\n    if (img.startsWith('data:image/')) {\n      return img;\n    }\n    // Exclude known placeholders\n    if (!img.includes('farmerProfilePlaceholder.png') && !img.includes('vendorProfilePlaceholder.png') && !img.includes('userProfilePlaceholder.png')) {\n      return img;\n    }\n  }\n\n  // Fallback: Placeholder\n  return getRoleProfilePlaceholder(user.role);\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ py: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nconst Dashboard = () => {\n  const [retryCount, setRetryCount] = useState(0);\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const [tabValue, setTabValue] = useState(0);\n  const [isProductDialogOpen, setIsProductDialogOpen] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\n  const [products, setProducts] = useState<Product[]>([]);\n  const [uploading, setUploading] = useState(false);\n  const [orders, setOrders] = useState<Order[]>([]);\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [openProductDialog, setOpenProductDialog] = useState(false);\n\n\n  // Fetch dashboard data only once on mount\n\n  async function fetchData() {\n    try {\n      const data = await fetchDashboardData();\n      setUser(data.user);\n      setProducts(data.products || []);\n      setOrders(data.orders || []);\n      setLoading(false);\n    } catch (error: any) {\n      let errorMsg = \"Failed to load dashboard data\";\n      if (error.response) {\n        if (error.response.status === 401) {\n          localStorage.removeItem(\"token\");\n          navigate(\"/login\");\n          return;\n        }\n        errorMsg = error.response.data?.message || errorMsg;\n        console.error(\"Error fetching dashboard data (response):\", error.response);\n      } else if (error.request) {\n        errorMsg = \"No response received from server. Please check your network or try again later.\";\n        console.error(\"Error fetching dashboard data (request):\", error.request);\n      } else {\n        errorMsg = error.message || errorMsg;\n        console.error(\"Error fetching dashboard data (general):\", error);\n      }\n      setError(errorMsg);\n      toast.error(errorMsg);\n      setLoading(false);\n    }\n  }\n\n  const [newProduct, setNewProduct] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    category: \"\",\n    stock: \"\",\n    unit: \"kg\",\n    images: [] as string[],\n    harvestDate: new Date().toISOString().split(\"T\")[0],\n    isOrganic: false,\n    location: {\n      district: \"\",\n      state: \"\",\n    },\n    availableQuantity: \"\",\n  } as {\n    name: string;\n    description: string;\n    price: string;\n    category: string;\n    stock: string;\n    unit: string;\n    images: string[];\n    harvestDate: string;\n    isOrganic: boolean;\n    location: { district: string; state: string };\n    availableQuantity: string;\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchDashboardData();\n        setUser(data.user);\n        setProducts(data.products || []);\n        setOrders(data.orders || []);\n        setLoading(false);\n      } catch (error: any) {\n        let errorMsg = \"Failed to load dashboard data\";\n        if (error.response) {\n          if (error.response.status === 401) {\n            localStorage.removeItem(\"token\");\n            navigate(\"/login\");\n            return;\n          }\n          errorMsg = error.response.data?.message || errorMsg;\n          console.error(\"Error fetching dashboard data (response):\", error.response);\n        } else if (error.request) {\n          errorMsg = \"No response received from server. Please check your network or try again later.\";\n          console.error(\"Error fetching dashboard data (request):\", error.request);\n        } else {\n          errorMsg = error.message || errorMsg;\n          console.error(\"Error fetching dashboard data (general):\", error);\n        }\n        setError(errorMsg);\n        toast.error(errorMsg);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [navigate]);\n\n\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n\n    setTabValue(newValue);\n  };\n\n  const handleAddProduct = async () => {\n    try {\n      // Detailed validation\n      const missingFields = [];\n      if (!newProduct.name) missingFields.push(t('dashboard.productName'));\n      if (!newProduct.description) missingFields.push(t('dashboard.description'));\n      if (!newProduct.price) missingFields.push(t('dashboard.price'));\n      if (!newProduct.category) missingFields.push(t('dashboard.category'));\n      if (!newProduct.availableQuantity)\n        missingFields.push(t('dashboard.availableQuantity'));\n      if (!newProduct.unit) missingFields.push(t('dashboard.unit'));\n      if (!newProduct.location.district) missingFields.push(t('dashboard.district'));\n      if (!newProduct.location.state) missingFields.push(t('dashboard.state'));\n      if (newProduct.images.length === 0) missingFields.push(t('dashboard.images'));\n\n\n      if (missingFields.length > 0) {\n        toast.error(t('dashboard.missingFields', { fields: missingFields.join(', ') }));\n        return;\n      }\n\n      const productData = {\n        name: newProduct.name,\n        description: newProduct.description,\n        price: parseFloat(newProduct.price),\n        category: newProduct.category,\n        availableQuantity: parseFloat(newProduct.availableQuantity),\n        unit: newProduct.unit,\n        images: newProduct.images,\n        harvestDate: newProduct.harvestDate,\n        isOrganic: newProduct.isOrganic,\n        location: {\n          district: newProduct.location.district,\n          state: newProduct.location.state,\n        },\n      };\n\n      await submitProduct(productData);\n    } catch (err: any) {\n      console.error(\"Error adding product:\", err);\n      toast.error(t('dashboard.productAddFail'));\n\n    }\n  };\n\n  const submitProduct = async (productData: NewProductData) => {\n    try {\n      const product = await addProduct(productData);\n      setProducts([...products, product]);\n      setOpenProductDialog(false);\n      setNewProduct({\n        name: \"\",\n        description: \"\",\n        price: \"\",\n        category: \"\",\n        stock: \"\",\n        unit: \"kg\",\n        images: [],\n        harvestDate: new Date().toISOString().split(\"T\")[0],\n        isOrganic: false,\n        location: {\n          district: \"\",\n          state: \"\",\n        },\n        availableQuantity: \"\",\n      });\n      toast.success(t('dashboard.productAddedSuccess'));\n\n    } catch (err: any) {\n      console.error(\"Error adding product:\", err);\n      toast.error(\n        \"Failed to add product: \" +\n        (err.response?.data?.message || err.message)\n      );\n    }\n  };\n\n  const handleEditProduct = (product: Product) => {\n    setSelectedProduct(product);\n    setIsProductDialogOpen(true);\n  };\n\n  const handleDeleteProduct = async (productId: string) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n\n      await deleteProduct(productId);\n      setProducts(products.filter((product) => product._id !== productId));\n      toast.success(\"Product deleted successfully\");\n    } catch (err: any) {\n      console.error(\"Error deleting product:\", err);\n      toast.error(\"Failed to delete product\");\n    }\n  };\n\n\n  if (loading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        minHeight=\"100vh\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container>\n        <Alert severity=\"error\">{error}</Alert>\n      </Container>\n    );\n  }\n\n  if (!user) {\n    return null;\n  }\n\n  const renderFarmerDashboard = () => (\n    <Grid container spacing={3}>\n      {/* Quick Actions Section */}\n      <Grid item xs={12} md={4}>\n        <Paper sx={{\n          p: 2,\n          backgroundColor: theme.palette.background.paper,\n          borderLeft: `4px solid ${theme.palette.primary.main}`,\n          boxShadow: theme.shadows[2]\n        }}>\n          <Typography variant=\"h6\" gutterBottom sx={{\n            color: theme.palette.primary.main,\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1\n          }}>\n            <DashboardIcon fontSize=\"small\" />\n            {t('dashboard.quickActions')}\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddIcon />}\n            onClick={() => setOpenProductDialog(true)}\n            fullWidth\n            sx={{\n              mb: 2,\n              py: 1.5,\n              transition: 'all 0.3s',\n              '&:hover': {\n                transform: 'translateY(-2px)',\n                boxShadow: theme.shadows[4]\n              }\n            }}\n          >\n            {t('dashboard.addNewProduct')}\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            startIcon={<InventoryIcon />}\n            onClick={() => navigate(\"/my-products\")}\n            fullWidth\n            sx={{\n              py: 1.5,\n              transition: 'all 0.3s',\n              '&:hover': {\n                backgroundColor: theme.palette.primary.light,\n                borderColor: theme.palette.primary.dark\n              }\n            }}\n          >\n            {t('dashboard.manageProducts')}\n          </Button>\n        </Paper>\n\n        {/* Stats Card */}\n        <Paper sx={{\n          mt: 2,\n          p: 2,\n          backgroundColor: theme.palette.success.light,\n          color: theme.palette.success.contrastText\n        }}>\n          <Typography variant=\"subtitle2\" gutterBottom>\n            {t('dashboard.totalInventoryValue')}\n          </Typography>\n          <Typography variant=\"h5\">\n            ₹{products.reduce((sum, p) => sum + (p.price * p.availableQuantity), 0).toLocaleString()}\n          </Typography>\n        </Paper>\n      </Grid>\n\n      {/* Recently Added Products */}\n      <Grid item xs={12} md={8}>\n        <Paper sx={{\n          p: 2,\n          backgroundColor: theme.palette.background.paper,\n          boxShadow: theme.shadows[2]\n        }}>\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n            <Typography variant=\"h6\" sx={{ color: theme.palette.primary.main, fontWeight: 700 }}>\n              <AccessTimeIcon fontSize=\"small\" sx={{ mr: 1 }} />\n              {t('dashboard.recentlyAddedProducts')}\n            </Typography>\n          </Box>\n          <Box sx={{ width: '100%', overflowX: { xs: 'auto', sm: 'visible' } }}>\n            <TableContainer sx={{ minWidth: { xs: 400, sm: 600 }, width: '100%' }}>\n              <Table size=\"small\">\n                <TableHead\n                  sx={{\n                    backgroundColor: theme.palette.primary.light,\n                    \"& th\": {\n                      color: theme.palette.primary.contrastText,\n                      fontWeight: \"bold\",\n                      px: { xs: 1, sm: 2 },\n                      py: { xs: 1, sm: 2 },\n                      fontSize: { xs: '0.9rem', sm: '1rem' },\n                    },\n                  }}\n                >\n                  <TableRow>\n                    <TableCell>{t('dashboard.product')}</TableCell>\n                    <TableCell>{t('dashboard.category')}</TableCell>\n                    <TableCell align=\"right\">{t('dashboard.price')}</TableCell>\n                    <TableCell align=\"right\">{t('dashboard.stock')}</TableCell>\n                    <TableCell>{t('dashboard.harvestDate')}</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {products.slice(0, 5).map((product) => (\n                    <TableRow\n                      key={product._id}\n                      hover\n                      sx={{\n                        '&:last-child td': { border: 0 },\n                        cursor: 'pointer',\n                        '&:hover': {\n                          backgroundColor: theme.palette.action.hover\n                        }\n                      }}\n                      onClick={() => navigate(`/my-products`)}\n                    >\n                      <TableCell sx={{ px: { xs: 1, sm: 2 }, py: { xs: 1, sm: 2 } }}>\n                        <Box sx={{ display: 'flex', alignItems: 'center', minWidth: 0 }}>\n                          <Avatar\n                            src={product.images[0] || '/product-placeholder.jpg'}\n                            variant=\"rounded\"\n                            sx={{\n                              width: { xs: 36, sm: 56 },\n                              height: { xs: 36, sm: 56 },\n                              mr: 1,\n                              boxShadow: theme.shadows[2],\n                              backgroundColor: theme.palette.grey[200],\n                            }}\n                            imgProps={{\n                              onError: (e) => {\n                                e.currentTarget.src = '/product-placeholder.jpg';\n                              }\n                            }}\n                          >\n                            <InventoryIcon fontSize=\"medium\" />\n                          </Avatar>\n                          <Box minWidth={0}>\n                            <Typography variant=\"body2\" noWrap sx={{ fontWeight: 500 }}>\n                              {product.name}\n                            </Typography>\n                            {product.isOrganic && (\n                              <Chip\n                                label={t('dashboard.organic')}\n                                size=\"small\"\n                                color=\"success\"\n                                sx={{ mt: 0.5 }}\n                              />\n                            )}\n                          </Box>\n                        </Box>\n                      </TableCell>\n                      <TableCell sx={{ px: { xs: 1, sm: 2 }, py: { xs: 1, sm: 2 } }}>\n                        <Chip\n                          label={product.category}\n                          color=\"primary\"\n                          variant=\"filled\"\n                          sx={{ textTransform: 'capitalize', fontSize: { xs: '0.8rem', sm: '1rem' } }}\n                        />\n                      </TableCell>\n                      <TableCell align=\"right\" sx={{ px: { xs: 1, sm: 2 }, py: { xs: 1, sm: 2 } }}>\n                        <Typography variant=\"body2\" color=\"primary\" fontWeight=\"500\">\n                          ₹{product.price}/{product.unit}\n                        </Typography>\n                      </TableCell>\n                      <TableCell align=\"right\" sx={{ px: { xs: 1, sm: 2 }, py: { xs: 1, sm: 2 } }}>\n                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\">\n                          <Box sx={{ width: { xs: 36, sm: 60 }, mr: 1 }}>\n                            <LinearProgress\n                              variant=\"determinate\"\n                              value={Math.min((product.availableQuantity / 100) * 100, 100)}\n                              sx={{\n                                height: 8,\n                                borderRadius: 4,\n                                backgroundColor: theme.palette.grey[200],\n                                '& .MuiLinearProgress-bar': {\n                                  borderRadius: 4,\n                                  backgroundColor: product.availableQuantity > 20\n                                    ? theme.palette.success.main\n                                    : theme.palette.warning.main\n                                }\n                              }}\n                            />\n                          </Box>\n                          <Typography variant=\"caption\">\n                            {product.availableQuantity} {product.unit}\n                          </Typography>\n                        </Box>\n                      </TableCell>\n                      <TableCell sx={{ px: { xs: 1, sm: 2 }, py: { xs: 1, sm: 2 } }}>\n                        <Chip\n                          label={new Date(product.harvestDate).toLocaleDateString()}\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                          icon={<CalendarTodayIcon fontSize=\"small\" sx={{ color: 'inherit' }} />}\n                          sx={{ fontSize: { xs: '0.8rem', sm: '1rem' } }}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            {/* View All Button for more than 5 products */}\n            {products.length > 5 && (\n              <Box mt={2} display=\"flex\" justifyContent=\"flex-end\">\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"small\"\n                  onClick={() => navigate('/my-products')}\n                  sx={{ borderRadius: 2, fontWeight: 500 }}\n                >\n                  {t('dashboard.viewAllProducts')}\n                </Button>\n              </Box>\n            )}\n          </Box>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n\n  const renderVendorDashboard = () => (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={4}>\n        <Paper sx={{ p: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            {t('dashboard.quickActions')}\n          </Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<ShoppingCartIcon />}\n            onClick={() => navigate(\"/marketplace\")}\n            fullWidth\n            sx={{ mb: 2 }}\n          >\n            {t('dashboard.browseProducts')}\n          </Button>\n          <Button\n            variant=\"outlined\"\n            startIcon={<LocalShipping />}\n            onClick={() => navigate(\"/bulk-orders\")}\n            fullWidth\n          >\n            {t('dashboard.bulkOrders')}\n          </Button>\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12} md={8}>\n        <Paper sx={{ p: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            {t('dashboard.recentBulkOrders')}\n          </Typography>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>{t('dashboard.orderId')}</TableCell>\n                  <TableCell>{t('dashboard.farmer')}</TableCell>\n                  <TableCell>{t('dashboard.amount')}</TableCell>\n                  <TableCell>{t('dashboard.status')}</TableCell>\n                  <TableCell>{t('dashboard.actions')}</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {orders.slice(0, 5).map((order) => (\n                  <TableRow key={order._id}>\n                    <TableCell>#{order._id.slice(-6)}</TableCell>\n                    <TableCell>{order.buyer.name}</TableCell>\n                    <TableCell>₹{order.totalAmount}</TableCell>\n                    <TableCell>\n                      <Chip\n                        label={order.status}\n                        color={\n                          order.status === \"completed\"\n                            ? \"success\"\n                            : order.status === \"pending\"\n                              ? \"warning\"\n                              : \"default\"\n                        }\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => navigate(`/order/${order._id}`)}\n                      >\n                        <VisibilityIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            {t('dashboard.availableProducts')}\n          </Typography>\n          <Grid container spacing={2}>\n            {products.map((product) => (\n              <Grid item xs={12} sm={6} md={4} key={product._id}>\n                <Card>\n                  <CardContent>\n                    <img\n                      src={product.images[0] || '/product-placeholder.jpg'}\n                      alt={product.name}\n                      style={{ width: \"100%\", height: 200, objectFit: \"cover\" }}\n                      onError={(e) => { (e.currentTarget as HTMLImageElement).src = '/product-placeholder.jpg'; }}\n                    />\n                    <Typography variant=\"h6\" sx={{ mt: 1 }}>\n                      {product.name}\n                    </Typography>\n                    <Typography color=\"textSecondary\">\n                      ₹{product.price}/{product.unit}\n                    </Typography>\n                    <Typography>\n                      {t('dashboard.available')}: {product.availableQuantity} {product.unit}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button\n                      size=\"small\"\n                      onClick={() => navigate(`/products/${product._id}`)}\n                    >\n                      {t('dashboard.viewDetails')}\n                    </Button>\n                    <Button\n                      size=\"small\"\n                      color=\"primary\"\n                      onClick={() => navigate(`/bulk-order/${product._id}`)}\n                    >\n                      {t('dashboard.bulkOrder')}\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n\n  const renderUserDashboard = () => (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={4}>\n        <Paper sx={{ p: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            {t('dashboard.quickActions')}\n          </Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<ShoppingCartIcon />}\n            onClick={() => navigate(\"/marketplace\")}\n            fullWidth\n            sx={{ mb: 2 }}\n          >\n            {t('dashboard.browseProducts')}\n          </Button>\n          <Button\n            variant=\"outlined\"\n            startIcon={<PersonIcon />}\n            onClick={() => navigate(\"/profile\")}\n            fullWidth\n          >\n            {t('dashboard.viewProfile')}\n          </Button>\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12} md={8}>\n        <Paper sx={{ p: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            {t('dashboard.orderHistory')}\n          </Typography>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>{t('dashboard.orderId')}</TableCell>\n                  <TableCell>{t('dashboard.date')}</TableCell>\n                  <TableCell>{t('dashboard.items')}</TableCell>\n                  <TableCell>{t('dashboard.amount')}</TableCell>\n                  <TableCell>{t('dashboard.status')}</TableCell>\n                  <TableCell>{t('dashboard.actions')}</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {orders.map((order) => (\n                  <TableRow key={order._id}>\n                    <TableCell>#{order._id.slice(-6)}</TableCell>\n                    <TableCell>\n                      {new Date(order.date).toLocaleDateString()}\n                    </TableCell>\n                    <TableCell>\n                      {order.items\n                        .map((item) => `${item.quantity} x ${item.product}`)\n                        .join(\", \")}\n                    </TableCell>\n                    <TableCell>₹{order.totalAmount}</TableCell>\n                    <TableCell>\n                      <Chip\n                        label={order.status}\n                        color={\n                          order.status === \"completed\"\n                            ? \"success\"\n                            : order.status === \"pending\"\n                              ? \"warning\"\n                              : \"default\"\n                        }\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => navigate(`/order/${order._id}`)}\n                      >\n                        <VisibilityIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n  // --- Enhanced Loading State ---\n  if (loading) {\n    return (\n      <Container maxWidth=\"sm\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', minHeight: '60vh' }}>\n        <CircularProgress sx={{ mb: 2 }} />\n        <Typography variant=\"h6\" color=\"text.secondary\">Loading your dashboard...</Typography>\n      </Container>\n    );\n  }\n\n  // --- Enhanced Error State ---\n  if (error) {\n    return (\n      <Container maxWidth=\"sm\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', minHeight: '60vh' }}>\n        <Alert severity=\"error\" sx={{ mb: 2, width: '100%' }}>{error}</Alert>\n        <Button variant=\"contained\" color=\"primary\" onClick={() => setRetryCount(c => c + 1)}>Retry</Button>\n      </Container>\n    );\n  }\n\n  // --- Dashboard Main Content ---\n  return (\n    <Container maxWidth=\"xl\" sx={{ py: 4 }}>\n      {/* Summary Cards */}\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} md={4}>\n          <Box sx={{ p: 3, borderRadius: 2, bgcolor: 'primary.main', color: 'white', display: 'flex', alignItems: 'center', gap: 2, boxShadow: 2 }}>\n            <Avatar\n              src={getProfileImageSrc(user)}\n              alt={user?.name || \"Profile\"}\n              sx={{\n                width: 56,\n                height: 56,\n                bgcolor: \"#fff\",\n                color: \"#222\",\n                fontWeight: 700,\n                fontSize: 28,\n                border: \"2px solid #eee\"\n              }}\n              imgProps={{\n                onError: (e) => {\n                  (e.currentTarget as HTMLImageElement).src = getRoleProfilePlaceholder(user?.role);\n                }\n              }}\n            >\n              {user?.name?.[0] || \"?\"}\n            </Avatar>\n            <Box>\n              <Typography variant=\"h6\" fontWeight={700}>{user?.name}</Typography>\n              <Typography variant=\"body2\">{user?.role?.toUpperCase()}</Typography>\n              <Typography variant=\"body2\" sx={{ opacity: 0.85 }}>{user?.email}</Typography>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Box sx={{ p: 3, borderRadius: 2, bgcolor: 'secondary.main', color: 'white', display: 'flex', alignItems: 'center', gap: 2, boxShadow: 2 }}>\n            <Box sx={{ fontSize: 40, mr: 2 }}>🛒</Box>\n            <Box>\n              <Typography variant=\"h6\" fontWeight={700}>{products.length}</Typography>\n              <Typography variant=\"body2\">Products Listed</Typography>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Box sx={{ p: 3, borderRadius: 2, bgcolor: 'success.main', color: 'white', display: 'flex', alignItems: 'center', gap: 2, boxShadow: 2 }}>\n            <Box sx={{ fontSize: 40, mr: 2 }}>📦</Box>\n            <Box>\n              <Typography variant=\"h6\" fontWeight={700}>{orders.length}</Typography>\n              <Typography variant=\"body2\">Orders</Typography>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n\n      {/* Tab Navigation */}\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          {t('dashboard.welcome')} {user.name}!\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          {user.role.charAt(0).toUpperCase() + user.role.slice(1)} {t('dashboard.dashboard')}\n        </Typography>\n      </Box>\n      {user.role === \"farmer\" && renderFarmerDashboard()}\n      {user.role === \"vendor\" && renderVendorDashboard()}\n      {user.role === \"user\" && renderUserDashboard()}\n      {/* Add/Edit Product Dialog */}\n      <Dialog\n        open={openProductDialog}\n        onClose={() => setOpenProductDialog(false)}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>{t('dashboard.addNewProduct')}</DialogTitle>\n        <DialogContent>\n          <Box component=\"form\" sx={{ mt: 2 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label={t('dashboard.productName')}\n                  fullWidth\n                  required\n                  value={newProduct.name}\n                  onChange={(e) =>\n                    setNewProduct({ ...newProduct, name: e.target.value })\n                  }\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl fullWidth required>\n                  <InputLabel>{t('dashboard.category')}</InputLabel>\n                  <Select\n                    label={t('dashboard.category')}\n                    value={newProduct.category}\n                    onChange={(e) =>\n                      setNewProduct({ ...newProduct, category: e.target.value })\n                    }\n                  >\n                    <MenuItem value=\"vegetables\">{t('dashboard.vegetables')}</MenuItem>\n                    <MenuItem value=\"fruits\">{t('dashboard.fruits')}</MenuItem>\n                    <MenuItem value=\"grains\">{t('dashboard.grains')}</MenuItem>\n                    <MenuItem value=\"dairy\">{t('dashboard.dairy')}</MenuItem>\n                    <MenuItem value=\"meat\">{t('dashboard.meat')}</MenuItem>\n                    <MenuItem value=\"poultry\">{t('dashboard.poultry')}</MenuItem>\n                    <MenuItem value=\"other\">{t('dashboard.other')}</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label={t('dashboard.price')}\n                  type=\"number\"\n                  fullWidth\n                  required\n                  value={newProduct.price}\n                  onChange={(e) =>\n                    setNewProduct({ ...newProduct, price: e.target.value })\n                  }\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl fullWidth required>\n                  <InputLabel>{t('dashboard.unit')}</InputLabel>\n                  <Select\n                    label={t('dashboard.unit')}\n                    value={newProduct.unit}\n                    onChange={(e) =>\n                      setNewProduct({ ...newProduct, unit: e.target.value })\n                    }\n                  >\n                    <MenuItem value=\"kg\">{t('dashboard.kilogram')}</MenuItem>\n                    <MenuItem value=\"g\">{t('dashboard.gram')}</MenuItem>\n                    <MenuItem value=\"lb\">{t('dashboard.pound')}</MenuItem>\n                    <MenuItem value=\"piece\">{t('dashboard.piece')}</MenuItem>\n                    <MenuItem value=\"dozen\">{t('dashboard.dozen')}</MenuItem>\n                    <MenuItem value=\"bunch\">{t('dashboard.bunch')}</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label={t('dashboard.availableQuantity')}\n                  type=\"number\"\n                  fullWidth\n                  required\n                  value={newProduct.availableQuantity}\n                  onChange={(e) =>\n                    setNewProduct({\n                      ...newProduct,\n                      availableQuantity: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label={t('dashboard.harvestDate')}\n                  type=\"date\"\n                  fullWidth\n                  required\n                  value={newProduct.harvestDate}\n                  onChange={(e) =>\n                    setNewProduct({\n                      ...newProduct,\n                      harvestDate: e.target.value,\n                    })\n                  }\n                  InputLabelProps={{ shrink: true }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  label={t('dashboard.description')}\n                  multiline\n                  rows={4}\n                  fullWidth\n                  required\n                  value={newProduct.description}\n                  onChange={(e) =>\n                    setNewProduct({\n                      ...newProduct,\n                      description: e.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label={t('dashboard.district')}\n                  fullWidth\n                  required\n                  value={newProduct.location.district}\n                  onChange={(e) =>\n                    setNewProduct({\n                      ...newProduct,\n                      location: {\n                        ...newProduct.location,\n                        district: e.target.value,\n                      },\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl fullWidth required>\n                  <InputLabel id=\"state-select-label\">{t('dashboard.state')}</InputLabel>\n                  <Select\n                    labelId=\"state-select-label\"\n                    id=\"state-select\"\n                    value={newProduct.location.state}\n                    label={t('dashboard.state')}\n                    onChange={(e) =>\n                      setNewProduct({\n                        ...newProduct,\n                        location: {\n                          ...newProduct.location,\n                          state: e.target.value,\n                        },\n                      })\n                    }\n                  >\n                    {[\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \"Tripura\", \"Uttar Pradesh\", \"Uttarakhand\", \"West Bengal\"].map((state) => (\n                      <MenuItem key={state} value={state}>{state}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={newProduct.isOrganic}\n                      onChange={(e) =>\n                        setNewProduct({\n                          ...newProduct,\n                          isOrganic: e.target.checked,\n                        })\n                      }\n                      color=\"secondary\"\n                    />\n                  }\n                  label={t('dashboard.organicProduct')}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  {t('dashboard.productImages')}\n                </Typography>\n                <ImageUpload\n                  images={newProduct.images}\n                  onImagesChange={(imgs) => setNewProduct({ ...newProduct, images: imgs })}\n                  uploading={uploading}\n                />\n              </Grid>\n            </Grid>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenProductDialog(false)}>{t('dashboard.cancel')}</Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleAddProduct}\n          >\n            {t('dashboard.addProduct')}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n\n// NOTE: This file is now modularized. ProductList, OrderList, ProfileCard, ImageUpload, DeleteConfirmationDialog are used for a modern, robust, and production-ready dashboard UI/UX.\n","import { useState, useEffect, useRef } from \"react\";\n\nimport {\n  Container,\n  Typography,\n  Paper,\n  Box,\n  Avatar,\n  Grid,\n  Divider,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  Tabs,\n  Tab,\n  CircularProgress,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Alert,\n  CardMedia,\n  Chip,\n  IconButton,\n  Tooltip,\n} from \"@mui/material\";\nimport { fetchDashboardData, fetchProducts, deleteProduct, fetchUserProfile, updateProfile, deleteProfile, fetchMyProducts, fetchMyContactRequests, rejectContactRequest, acceptContactRequest, confirmContactRequestAsUser, confirmContactRequestAsFarmer, fetchDisputes, resolveDispute } from \"../services/apiService\";\n// Import Product type from apiService for type compatibility\nimport type { Product as ApiProduct } from \"../services/apiService\";\nimport {\n  Edit,\n  ShoppingBag,\n  Inventory,\n  History,\n  LocationOn,\n  Phone,\n  Email,\n  Delete,\n  GrassOutlined,\n  Add,\n} from \"@mui/icons-material\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useTheme } from \"@mui/material/styles\";\n\nimport { useTranslation } from \"react-i18next\";\n\n// Local TabPanel implementation for accessibility and correct props\ntype TabPanelProps = {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n};\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`profile-tabpanel-${index}`}\n      aria-labelledby={`profile-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ py: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\n// Define types for API responses\ninterface ApiError {\n  message?: string;\n  details?: Record<string, string>;\n}\n\ninterface User {\n  _id: string;\n  name: string;\n  email: string;\n  phone: string;\n  role: \"user\" | \"farmer\" | \"vendor\";\n  address?: {\n    street: string;\n    district: string;\n    state: string;\n    zipcode: string;\n  };\n  profileImage?: {\n    data: string | null;\n    contentType: string | null;\n  };\n  createdAt: string;\n  username?: string;\n}\n\n// Use the Product type from apiService for consistency with backend responses\n// If you want to extend, use: type Product = ApiProduct & { ... }\ntype Product = ApiProduct;\n\ninterface EditForm {\n  name: string;\n  email: string;\n  phone: string;\n  address: {\n    street: string;\n    district: string;\n    state: string;\n    zipcode: string;\n  };\n}\n\nfunction isPlaceholder(url?: string): boolean {\n  if (!url) return true;\n  // If it's a base64 data URL, it's not a placeholder\n  if (url.startsWith('data:image/')) return false;\n  return (\n    url.includes('farmerProfilePlaceholder.png') ||\n    url.includes('vendorProfilePlaceholder.png') ||\n    url.includes('userProfilePlaceholder.png')\n  );\n}\n\nfunction getRoleProfilePlaceholder(role?: string): string {\n  switch (role) {\n    case 'farmer':\n      return '/images/farmerProfilePlaceholder.png';\n    case 'vendor':\n      return '/images/vendorProfilePlaceholder.png';\n    default:\n      return '/images/userProfilePlaceholder.png';\n  }\n}\n\n// Utility: Convert File to base64 string\nfunction fileToBase64(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => resolve((reader.result as string).split(',')[1]);\n    reader.onerror = reject;\n    reader.readAsDataURL(file);\n  });\n}\n\n// Best-practice EditableProfileAvatar component\nconst EditableProfileAvatar = ({\n  user,\n  onImageSelected,\n  loading,\n  preview,\n  setProfileImagePreview,\n}: {\n  user: User | null;\n  onImageSelected: (file: File | null) => void;\n  loading: boolean;\n  preview: string | null;\n  setProfileImagePreview: (url: string | null) => void;\n}) => {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const getAvatarSrc = () => {\n    if (preview) return preview;\n    if (user?.profileImage && user.profileImage.data && user.profileImage.contentType) {\n      return `data:${user.profileImage.contentType};base64,${user.profileImage.data}`;\n    }\n    return getRoleProfilePlaceholder(user?.role);\n  };\n\n  const handleAvatarEditKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\n    if (e.key === \"Enter\" || e.key === \" \") {\n      fileInputRef.current?.click();\n    }\n  };\n\n  return (\n    <Box sx={{ position: \"relative\", mb: 1 }}>\n      <Avatar\n        src={getAvatarSrc()}\n        alt={user?.name || \"Profile\"}\n        sx={{\n          width: 100,\n          height: 100,\n          border: theme => `3px solid ${theme.palette.primary.main}`,\n          bgcolor: \"#f0f0f0\",\n        }}\n        imgProps={{\n          loading: \"lazy\",\n          style: { objectFit: \"cover\" },\n        }}\n      />\n      <Tooltip title=\"Change profile photo\">\n        <IconButton\n          aria-label=\"Change profile photo\"\n          size=\"small\"\n          sx={{\n            position: \"absolute\",\n            bottom: 4,\n            right: 4,\n            background: \"#fff\",\n            borderRadius: \"50%\",\n            boxShadow: 1,\n            p: 0.5,\n            zIndex: 2,\n            \"&:hover\": { background: \"#f5f5f5\" },\n          }}\n          onClick={() => fileInputRef.current?.click()}\n          onKeyDown={handleAvatarEditKeyDown}\n          tabIndex={0}\n        >\n          <Edit fontSize=\"small\" color=\"primary\" />\n        </IconButton>\n      </Tooltip>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        ref={fileInputRef}\n        style={{ display: \"none\" }}\n        onChange={e => {\n          const file = e.target.files?.[0] || null;\n          onImageSelected(file);\n          if (file) {\n            const reader = new FileReader();\n            reader.onload = () => setProfileImagePreview(reader.result as string);\n            reader.readAsDataURL(file);\n          } else {\n            setProfileImagePreview(null);\n          }\n        }}\n        tabIndex={-1}\n      />\n      {loading && (\n        <CircularProgress\n          size={32}\n          sx={{\n            position: \"absolute\",\n            top: 34,\n            left: 34,\n            zIndex: 3,\n          }}\n        />\n      )}\n    </Box>\n  );\n};\n\nconst Profile = () => {\n  // --- Connections state for ConnectionsList ---\n\n  const theme = useTheme();\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [tabValue, setTabValue] = useState(0);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\n  const [uploadedProducts, setUploadedProducts] = useState<Product[]>([]);\n  const [contactRequests, setContactRequests] = useState<{ sent: any[]; received: any[] }>({ sent: [], received: [] });\n\n  const [productsLoading, setProductsLoading] = useState(false);\n\n  const [deleteProductDialogOpen, setDeleteProductDialogOpen] = useState(false);\n  const [selectedProductId, setSelectedProductId] = useState<string | null>(\n    null\n  );\n  const [editForm, setEditForm] = useState<EditForm>({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    address: {\n      street: \"\",\n      district: \"\",\n      state: \"\",\n      zipcode: \"\",\n    },\n  });\n  // Profile image upload state for edit dialog\n  const [profileImageUploading, setProfileImageUploading] = useState(false);\n  const [selectedProfileImage, setSelectedProfileImage] = useState<File | null>(null);\n  const [profileImagePreview, setProfileImagePreview] = useState<string | null>(null);\n  const [loadingIds, setLoadingIds] = useState<string[]>([]);\n\n  // Add state for confirmation dialogs\n  const [showUserConfirmDialog, setShowUserConfirmDialog] = useState(false);\n  const [showFarmerConfirmDialog, setShowFarmerConfirmDialog] = useState(false);\n  const [activeRequest, setActiveRequest] = useState<any>(null);\n  const [finalQuantity, setFinalQuantity] = useState<number>(1);\n  const [finalPrice, setFinalPrice] = useState<string>('');\n  const [userFeedback, setUserFeedback] = useState('');\n  const [didBuy, setDidBuy] = useState<boolean>(true);\n  const [farmerFeedback, setFarmerFeedback] = useState('');\n  const [didSell, setDidSell] = useState<boolean>(true);\n\n  const [acceptingRequestId, setAcceptingRequestId] = useState<string | null>(null);\n  const [rejectingRequestId, setRejectingRequestId] = useState<string | null>(null);\n\n  // Handle profile image upload\n  const handleProfileImageUpload = async () => {\n    if (!selectedProfileImage) return;\n    setProfileImageUploading(true);\n    try {\n      const base64 = await fileToBase64(selectedProfileImage);\n      await updateProfile({\n        ...editForm,\n        profileImage: {\n          data: base64,\n          contentType: selectedProfileImage.type,\n        },\n      });\n      await fetchUserProfileData();\n      setProfileImagePreview(null);\n      setSelectedProfileImage(null);\n      toast.success('Profile image updated!');\n    } catch (error: any) {\n      toast.error(error.message || 'Failed to upload profile image');\n    } finally {\n      setProfileImageUploading(false);\n    }\n  };\n\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    const checkAuth = () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        navigate(\"/login\");\n        return;\n      }\n    };\n\n    const loadInitialData = async () => {\n      try {\n        const userData = await fetchUserProfile();\n        setUser(userData);\n        setEditForm({\n          name: userData.name,\n          email: userData.email,\n          phone: userData.phone,\n          address: userData.address || {\n            street: \"\",\n            district: \"\",\n            state: \"\",\n            zipcode: \"\",\n          },\n        });\n        if (userData.role === 'farmer') {\n          const products = await fetchMyProducts();\n          setUploadedProducts(products);\n        }\n        const [requests, ] = await Promise.all([\n          fetchMyContactRequests(),\n        ]);\n        setContactRequests(requests);\n\n      } catch (error) {\n        // Handle errors\n      } finally {\n        setLoading(false);\n      }\n    };\n  \n    checkAuth();\n    loadInitialData();\n  }, [navigate]);\n\n  // Fetch uploaded products when user or tab changes\n// AFTER (Proper tab synchronization)\nuseEffect(() => {\n  if (user?.role === 'farmer' && tabValue === 0) {\n    const controller = new AbortController();\n    \n    const fetchProducts = async () => {\n      setProductsLoading(true);\n      try {\n        const products = await fetchMyProducts({ signal: controller.signal });\n        setUploadedProducts(prev => \n          JSON.stringify(prev) === JSON.stringify(products) ? prev : products\n        );\n      } finally {\n        setProductsLoading(false);\n      }\n    };\n\n    fetchProducts();\n    return () => controller.abort();\n  }\n}, [tabValue]);\n\n  const fetchUserProfileData = async () => {\n    try {\n      const data = await fetchUserProfile();\n      setUser(data);\n      setEditForm({\n        name: data.name,\n        email: data.email,\n        phone: data.phone,\n        address: data.address || {\n          street: \"\",\n          district: \"\",\n          state: \"\",\n          zipcode: \"\",\n        },\n      });\n    } catch (error: any) {\n      if (error.status === 401) {\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n      }\n      setUser(null);\n      console.error(\"Error fetching profile:\", error);\n      toast.error(String(error.message || error));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  const handleEditClick = () => {\n    setIsEditDialogOpen(true);\n  };\n\n  const handleDeleteClick = () => {\n    setIsDeleteDialogOpen(true);\n  };\n\n  // Fetch contact requests and  for the user\n  const refreshContactRequests = async () => {\n    try {\n      const requests = await fetchMyContactRequests();\n      setContactRequests(requests);\n    } catch (error) {\n      setContactRequests({ sent: [], received: [] });\n    }\n  };\n\n  const fetchUploadedProducts = async () => {\n    setProductsLoading(true);\n    try {\n      const products = await fetchMyProducts();\n      // Ensure every product has a category field for type safety\n      setUploadedProducts(products as ApiProduct[]);\n    } catch (error: any) {\n      toast.error(t('profile.failedToFetchProducts'));\n    } finally {\n      setProductsLoading(false);\n    }\n  };\n\n\n  // Handle profile image selection in edit dialog\n  const handleProfileImageSelected = (file: File | null) => {\n    setSelectedProfileImage(file);\n    setProfileImagePreview(file ? URL.createObjectURL(file) : null);\n  };\n\n  // When user submits the edit profile form, upload the image if selected\n  const handleEditSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setProfileImageUploading(true);\n    try {\n      if (selectedProfileImage) {\n        const base64 = await fileToBase64(selectedProfileImage);\n        await updateProfile({\n          ...editForm,\n          profileImage: {\n            data: base64,\n            contentType: selectedProfileImage.type,\n          },\n        });\n      } else {\n        await updateProfile(editForm);\n      }\n      await fetchUserProfileData();\n      setIsEditDialogOpen(false);\n      setSelectedProfileImage(null);\n      setProfileImagePreview(null);\n      toast.success(t('profile.profileUpdated'));\n    } catch (error: any) {\n      console.error(\"Update error:\", error);\n      if (error.details) {\n        Object.values(error.details).forEach((message) => {\n          toast.error(String(message));\n        });\n      } else {\n        toast.error(String(error.message || t('profile.failedToUpdateProfile')));\n      }\n    } finally {\n      setProfileImageUploading(false);\n    }\n  };\n\n  const handleDeleteProductClick = (productId: string) => {\n    setSelectedProductId(productId);\n    setDeleteProductDialogOpen(true);\n  };\n\n  const handleConfirmDeleteProduct = async () => {\n    if (!selectedProductId) return;\n\n    try {\n      await deleteProduct(selectedProductId);\n\n      setUploadedProducts((prev) =>\n        prev.filter((p) => p._id !== selectedProductId)\n      );\n      toast.success(t('profile.productDeleted'));\n    } catch (error: any) {\n      console.error(\"Delete product error:\", error);\n      toast.error(String(error));\n    } finally {\n      setDeleteProductDialogOpen(false);\n      setSelectedProductId(null);\n    }\n  };\n\n  const handleDeleteProduct = async (productId: string) => {\n    try {\n      await deleteProduct(productId);\n      setUploadedProducts((prev) => prev.filter((p) => p._id !== productId));\n      toast.success(t('profile.productDeleted'));\n    } catch (error: any) {\n      console.error(\"Delete product error:\", error);\n      toast.error(String(error));\n    }\n  };\n\n  const handleDeleteConfirm = async () => {\n    try {\n      await deleteProfile();\n      toast.success(t('profile.accountDeleted'));\n      navigate(\"/login\");\n    } catch (error: any) {\n      toast.error(String(error.message || error));\n    }\n  };\n\n  const getRoleLabel = (role: string) => {\n    switch (role) {\n      case \"farmer\":\n        return t('profile.farmer');\n      case \"vendor\":\n        return t('profile.vendor');\n      case \"user\":\n      default:\n        return t('profile.customer');\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    if (name.includes(\".\")) {\n      const [parent, child] = name.split(\".\");\n      setEditForm((prev) => ({\n        ...prev,\n        [parent]: {\n          ...(prev[parent as keyof EditForm] as Record<string, string>),\n          [child]: value,\n        },\n      }));\n    } else {\n      setEditForm((prev) => ({\n        ...prev,\n        [name]: value,\n      }));\n    }\n  };\n\n  // Handler for user confirmation\n  const handleUserConfirm = async () => {\n    if (!activeRequest || finalPrice === '' || isNaN(Number(finalPrice)) || Number(finalPrice) <= 0) {\n      toast.error('Please enter a valid final price.');\n      return;\n    }\n    try {\n      await confirmContactRequestAsUser(activeRequest._id, {\n        finalQuantity,\n        finalPrice: Number(finalPrice),\n        didBuy,\n        feedback: userFeedback,\n      });\n      toast.success('Confirmation submitted!');\n      setShowUserConfirmDialog(false);\n      refreshContactRequests();\n    } catch (error) {\n      toast.error('Failed to submit confirmation');\n    }\n  };\n\n  // Handler for farmer confirmation\n  const handleFarmerConfirm = async () => {\n    if (!activeRequest || finalPrice === '' || isNaN(Number(finalPrice)) || Number(finalPrice) <= 0) {\n      toast.error('Please enter a valid final price.');\n      return;\n    }\n    try {\n      await confirmContactRequestAsFarmer(activeRequest._id, {\n        finalQuantity,\n        finalPrice: Number(finalPrice),\n        didSell,\n        feedback: farmerFeedback,\n      });\n      toast.success('Confirmation submitted!');\n      setShowFarmerConfirmDialog(false);\n      refreshContactRequests();\n    } catch (error) {\n      toast.error('Failed to submit confirmation');\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container sx={{ py: 8, textAlign: \"center\" }}>\n        <CircularProgress />\n      </Container>\n    );\n  }\n\n  if (!user) {\n    return (\n      <Container sx={{ py: 8, textAlign: \"center\" }}>\n        <Alert severity=\"error\">{t('profile.failedToLoadProfile')}</Alert>\n      </Container>\n    );\n  }\n\n  return (\n    <>\n    <Container maxWidth=\"lg\" sx={{ py: 8 }}>\n      <Paper sx={{ p: 3, mb: 4 }}>\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: { xs: \"flex-start\", sm: \"center\" },\n            flexDirection: { xs: \"column\", sm: \"row\" },\n            mb: 3,\n            gap: { xs: 2, sm: 3 }, // Responsive gap\n          }}\n        >\n          <Avatar\n            src={\n              profileImagePreview ||\n              (user?.profileImage && user.profileImage.data && user.profileImage.contentType\n                ? `data:${user.profileImage.contentType};base64,${user.profileImage.data}`\n                : getRoleProfilePlaceholder(user?.role)\n              )\n            }\n            alt={user?.name || 'Profile'}\n            sx={{ width: 100, height: 100, border: theme => `3px solid ${theme.palette.primary.main}`, bgcolor: '#f0f0f0' }}\n            imgProps={{\n              loading: 'lazy',\n              style: { objectFit: 'cover' },\n            }}\n          />\n          <Box>\n            <Typography\n              variant=\"h4\"\n              sx={{\n                typography: { xs: \"h5\", sm: \"h4\" },\n                wordBreak: \"break-word\",\n                textAlign: { xs: \"center\", sm: \"left\" },\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                maxWidth: \"100%\",\n                mb: 0, \n                lineHeight: 1.2, // Adjust line height\n                pt: 0.5, // Add small padding to compensate\n              }}\n            >\n              {user.name}\n            </Typography>\n            <Box>\n              <Typography variant=\"body1\" color=\"text.secondary\" gutterBottom>\n                {getRoleLabel(user.role)}\n              </Typography>\n              {user.username && (\n                <Typography variant=\"body2\" color=\"text.primary\" sx={{ fontWeight: 500 }} gutterBottom>\n                  @{user.username}\n                </Typography>\n              )}\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {t('profile.memberSince')}{\" \"}\n                {new Date(user.createdAt).toLocaleDateString(\"en-IN\", {\n                  year: \"numeric\",\n                  month: \"long\",\n                  day: \"numeric\",\n                })}\n              </Typography>\n            </Box>\n            <Box\n              sx={{\n                width: { xs: \"100%\", sm: \"auto\" },\n                display: \"flex\",\n                gap: 2,\n                flexDirection: { xs: \"row\", sm: \"row\" },\n                justifyContent: { xs: \"space-between\", sm: \"flex-start\" },\n                mt: { xs: 2, sm: 0 },\n              }}\n            >\n              <Button\n                variant=\"outlined\"\n                startIcon={<Edit />}\n                onClick={handleEditClick}\n                size=\"small\"\n                sx={{\n                  whiteSpace: \"nowrap\",\n                  minWidth: \"40px\", // Add fixed width\n                  px: { xs: 1, sm: 2 }, // Adjust horizontal padding\n                  \"& .MuiButton-startIcon\": {\n                    mr: { xs: 0, sm: 1 },\n                    marginLeft: 0, // Remove left margin\n                  },\n                }}\n              >\n                <Box\n                  component=\"span\"\n                  sx={{ display: { xs: \"none\", sm: \"inline\" } }}\n                >\n                  {t('profile.editProfile')}\n                </Box>\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"error\"\n                startIcon={<Delete />}\n                onClick={handleDeleteClick}\n                size=\"small\"\n                sx={{\n                  whiteSpace: \"nowrap\",\n                  minWidth: \"40px\", // Add fixed width\n                  px: { xs: 1, sm: 2 }, // Adjust horizontal padding\n                  \"& .MuiButton-startIcon\": {\n                    mr: { xs: 0, sm: 1 },\n                    marginLeft: 0, // Remove left margin\n                  },\n                }}\n              >\n                <Box\n                  component=\"span\"\n                  sx={{ display: { xs: \"none\", sm: \"inline\" } }}\n                >\n                  {t('profile.deleteAccount')}\n                </Box>\n              </Button>\n            </Box>\n          </Box>\n        </Box>\n\n        <Box>\n          <Divider sx={{ my: 2 }} />\n\n          <Box>\n            <Divider sx={{ my: 2 }} />\n            <List>\n              <ListItem>\n                <Email color=\"primary\" sx={{ mr: 2 }} />\n                <ListItemText primary={t('profile.email')} secondary={user.email} />\n              </ListItem>\n              <ListItem>\n                <Phone color=\"primary\" sx={{ mr: 2 }} />\n                <ListItemText primary={t('profile.phone')} secondary={user.phone} />\n              </ListItem>\n              <ListItem>\n                <LocationOn color=\"primary\" sx={{ mr: 2 }} />\n                <ListItemText\n                  primary={t('profile.address')}\n                  secondary={\n                    user.address?.street\n                      ? `${user.address.street}, ${user.address.district}, ${user.address.state}, ${user.address.zipcode}`\n                      : t('profile.addressNotProvided')\n                  }\n                />\n              </ListItem>\n            </List>\n          </Box>\n        </Box>\n\n      </Paper>\n\n      {/* Main Content Tabs */}\n      <Paper sx={{ p: 3 }}>\n        <Tabs\n          value={tabValue}\n          onChange={handleTabChange}\n          aria-label=\"profile tabs\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          allowScrollButtonsMobile\n          sx={{ mb: 3 }}\n        >\n          {user?.role === 'farmer' && <Tab label={t('profile.productsTab')} />}\n          <Tab label={t('profile.contactRequestsTab')} />\n\n        </Tabs>\n\n        {/* Products Tab (Farmer only) */}\n        {user?.role === 'farmer' && tabValue === 0 && (\n          <TabPanel value={tabValue} index={0}>\n            {productsLoading ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: 200 }}>\n                <CircularProgress />\n              </Box>\n            ) : uploadedProducts.length === 0 ? (\n              <Typography variant=\"body1\" color=\"text.secondary\">\n                {t('profile.noProductsUploaded')}\n              </Typography>\n            ) : (\n              <Grid container spacing={2}>\n                {uploadedProducts.map(product => (\n                  <Grid item xs={12} sm={6} md={4} key={product._id}>\n                    <Paper elevation={2} sx={{ p: 2 }}>\n                      <Typography variant=\"h6\">{product.name}</Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">{(product as any).category ?? 'N/A'}</Typography>\n                      <Typography variant=\"body2\">Price: {product.price} / {product.unit}</Typography>\n                      <Typography variant=\"body2\">Available: {product.availableQuantity}</Typography>\n                      {product.images && product.images.length > 0 && (\n                        <CardMedia\n                          component=\"img\"\n                          height=\"120\"\n                          image={product.images[0]}\n                          alt={product.name}\n                          sx={{ mt: 1, mb: 1, objectFit: 'cover', borderRadius: 1 }}\n                        />\n                      )}\n                      <Box\n                        sx={{\n                          mt: 2,\n                          display: \"flex\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          onClick={() => navigate(`/products/${product._id}`)}\n                        >\n                          {t('profile.viewDetails')}\n                        </Button>\n                        <Button\n                          variant=\"contained\"\n                          color=\"error\"\n                          size=\"small\"\n                          startIcon={<Delete />}\n                          onClick={() =>\n                            handleDeleteProductClick(product._id)\n                          }\n                        >\n                          {t('profile.delete')}\n                        </Button>\n                      </Box>\n                    </Paper>\n                  </Grid>\n                ))}\n              </Grid>\n            )}\n          </TabPanel>\n        )}\n\n        {/* Contact Requests Tab */}\n        {tabValue === (user?.role === 'farmer' ? 1 : 0) && (\n          <TabPanel value={tabValue} index={user?.role === 'farmer' ? 1 : 0}>\n            <Typography variant=\"h6\" gutterBottom>{t('profile.contactRequestsTab')}</Typography>\n            <Box>\n              <Typography variant=\"subtitle1\">Sent Requests</Typography>\n              {contactRequests.sent.length === 0 ? <Typography>No sent requests.</Typography> : (\n                contactRequests.sent.map(req => (\n                  <Box key={req._id} sx={{ mb: 2, p: 2, border: '1px solid #eee', borderRadius: 2 }}>\n                    <Typography>Product: {req.productId?.name || req.productId}</Typography>\n                    <Typography>Status: {req.status}</Typography>\n                    <Typography>Requested At: {new Date(req.requestedAt).toLocaleString()}</Typography>\n                    {/* Show Requested Quantity */}\n                    {typeof req.requestedQuantity !== 'undefined' && (\n                      <Typography>Requested Quantity: {req.requestedQuantity}</Typography>\n                    )}\n                    {/* Show Farmer Contact Info if accepted or later */}\n                    {(req.status === 'accepted' || req.status === 'completed' || req.status === 'disputed' || req.status === 'not_completed' || req.status === 'expired') && req.farmerId && (\n                      <Box sx={{ mt: 1, mb: 1, p: 1, bgcolor: '#f9f9f9', borderRadius: 1 }}>\n                        <Typography variant=\"subtitle2\">Farmer Contact Info:</Typography>\n                        {req.farmerId.phone && <Typography>Phone: {req.farmerId.phone}</Typography>}\n                        {req.farmerId.email && <Typography>Email: {req.farmerId.email}</Typography>}\n                        {req.farmerId.address && (\n                          <Typography>Address: {req.farmerId.address.street}, {req.farmerId.address.district}, {req.farmerId.address.state}, {req.farmerId.address.zipcode}</Typography>\n                        )}\n                      </Box>\n                    )}\n                    {req.status === 'accepted' && !req.userConfirmed && (\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"small\"\n                        sx={{ mt: 1 }}\n                        onClick={() => {\n                          setActiveRequest(req);\n                          setFinalQuantity(req.requestedQuantity || 1);\n                          setFinalPrice('');\n                          setShowUserConfirmDialog(true);\n                        }}\n                      >\n                        Did you buy this product?\n                      </Button>\n                    )}\n                    {req.status === 'completed' && (\n                      <Typography color=\"success.main\">Completed</Typography>\n                    )}\n                    {req.status === 'disputed' && (\n                      <Typography color=\"error.main\">Disputed</Typography>\n                    )}\n                    {/* Show final details if available */}\n                    {req.finalQuantity && <Typography>Final Quantity: {req.finalQuantity}</Typography>}\n                    {req.finalPrice && <Typography>Final Price: {req.finalPrice}</Typography>}\n                    {req.userFeedback && <Typography>User Feedback: {req.userFeedback}</Typography>}\n                    {req.farmerFeedback && <Typography>Farmer Feedback: {req.farmerFeedback}</Typography>}\n                    {req.adminNote && <Typography>Admin Note: {req.adminNote}</Typography>}\n                  </Box>\n                ))\n              )}\n              {user?.role !== 'user' && (\n                <>\n                  <Typography variant=\"subtitle1\" sx={{ mt: 2 }}>Received Requests</Typography>\n                  {contactRequests.received.length === 0 ? <Typography>No received requests.</Typography> : (\n                    contactRequests.received.map((req) => (\n                      <Box key={req._id} sx={{ mb: 2, p: 2, border: '1px solid #eee', borderRadius: 2 }}>\n                        <Typography>From: {req.requesterId?.name || req.requesterId}</Typography>\n                        <Typography>Product: {req.productId?.name || req.productId}</Typography>\n                        <Typography>Status: {req.status}</Typography>\n                        <Typography>Requested At: {new Date(req.requestedAt).toLocaleString()}</Typography>\n                        {/* Show Requested Quantity */}\n                        {typeof req.requestedQuantity !== 'undefined' && (\n                          <Typography>Requested Quantity: {req.requestedQuantity}</Typography>\n                        )}\n                        {/* Accept/Reject Buttons for pending requests */}\n                        {req.status === 'pending' && (\n                          <Box sx={{ mt: 1, display: 'flex', gap: 1 }}>\n                            <Button\n                              variant=\"contained\"\n                              color=\"success\"\n                              size=\"small\"\n                              disabled={acceptingRequestId === req._id}\n                              onClick={async () => {\n                                setAcceptingRequestId(req._id);\n                                try {\n                                  await acceptContactRequest(req._id);\n                                  toast.success('Request accepted');\n                                  refreshContactRequests();\n                                } catch (error) {\n                                  toast.error('Failed to accept request');\n                                } finally {\n                                  setAcceptingRequestId(null);\n                                }\n                              }}\n                            >\n                              {acceptingRequestId === req._id ? <CircularProgress size={18} /> : 'Accept'}\n                            </Button>\n                            <Button\n                              variant=\"outlined\"\n                              color=\"error\"\n                              size=\"small\"\n                              disabled={rejectingRequestId === req._id}\n                              onClick={async () => {\n                                setRejectingRequestId(req._id);\n                                try {\n                                  await rejectContactRequest(req._id);\n                                  toast.info('Request rejected');\n                                  refreshContactRequests();\n                                } catch (error) {\n                                  toast.error('Failed to reject request');\n                                } finally {\n                                  setRejectingRequestId(null);\n                                }\n                              }}\n                            >\n                              {rejectingRequestId === req._id ? <CircularProgress size={18} /> : 'Reject'}\n                            </Button>\n                          </Box>\n                        )}\n                        {/* Confirm Sale Button (already present) */}\n                        {req.status === 'accepted' && req.userConfirmed && !req.farmerConfirmed && (\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"small\"\n                            sx={{ mt: 1 }}\n                            onClick={() => {\n                              setActiveRequest(req);\n                              setFinalQuantity(req.finalQuantity || 1);\n                              setFinalPrice('');\n                              setShowFarmerConfirmDialog(true);\n                            }}\n                          >\n                            Confirm Sale\n                          </Button>\n                        )}\n                        {/* Show final details if available */}\n                        {req.finalQuantity && <Typography>Final Quantity: {req.finalQuantity}</Typography>}\n                        {req.finalPrice && <Typography>Final Price: {req.finalPrice}</Typography>}\n                        {req.userFeedback && <Typography>User Feedback: {req.userFeedback}</Typography>}\n                        {req.farmerFeedback && <Typography>Farmer Feedback: {req.farmerFeedback}</Typography>}\n                        {req.adminNote && <Typography>Admin Note: {req.adminNote}</Typography>}\n                      </Box>\n                    ))\n                  )}\n                </>\n              )}\n            </Box>\n            {/* User Confirmation Dialog */}\n            <Dialog open={showUserConfirmDialog} onClose={() => setShowUserConfirmDialog(false)}>\n              <DialogTitle>Confirm Purchase</DialogTitle>\n              <DialogContent>\n                <TextField\n                  label=\"Final Bought Quantity\"\n                  type=\"number\"\n                  value={finalQuantity}\n                  onChange={e => setFinalQuantity(Number(e.target.value))}\n                  fullWidth\n                  sx={{ mt: 2 }}\n                />\n                <TextField\n                  label=\"Final Price\"\n                  type=\"number\"\n                  value={finalPrice}\n                  onChange={e => setFinalPrice(e.target.value)}\n                  fullWidth\n                  sx={{ mt: 2 }}\n                  required\n                  error={finalPrice === '' || isNaN(Number(finalPrice)) || Number(finalPrice) <= 0}\n                  helperText={finalPrice === '' ? 'Final price is required' : (isNaN(Number(finalPrice)) || Number(finalPrice) <= 0 ? 'Enter a valid price' : '')}\n                />\n                <TextField\n                  label=\"Feedback (optional)\"\n                  value={userFeedback}\n                  onChange={e => setUserFeedback(e.target.value)}\n                  fullWidth\n                  sx={{ mt: 2 }}\n                />\n                <Box sx={{ mt: 2 }}>\n                  <Button\n                    variant={didBuy ? 'contained' : 'outlined'}\n                    color=\"success\"\n                    onClick={() => setDidBuy(true)}\n                    sx={{ mr: 1 }}\n                  >\n                    Yes, I bought\n                  </Button>\n                  <Button\n                    variant={!didBuy ? 'contained' : 'outlined'}\n                    color=\"error\"\n                    onClick={() => setDidBuy(false)}\n                  >\n                    No, I did not buy\n                  </Button>\n                </Box>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => setShowUserConfirmDialog(false)}>Cancel</Button>\n                <Button onClick={handleUserConfirm} color=\"primary\">Submit</Button>\n              </DialogActions>\n            </Dialog>\n            {/* Farmer Confirmation Dialog */}\n            <Dialog open={showFarmerConfirmDialog} onClose={() => setShowFarmerConfirmDialog(false)}>\n              <DialogTitle>Confirm Sale</DialogTitle>\n              <DialogContent>\n                <TextField\n                  label=\"Final Sold Quantity\"\n                  type=\"number\"\n                  value={finalQuantity}\n                  onChange={e => setFinalQuantity(Number(e.target.value))}\n                  fullWidth\n                  sx={{ mt: 2 }}\n                />\n                <TextField\n                  label=\"Final Price\"\n                  type=\"number\"\n                  value={finalPrice}\n                  onChange={e => setFinalPrice(e.target.value)}\n                  fullWidth\n                  sx={{ mt: 2 }}\n                  required\n                  error={finalPrice === '' || isNaN(Number(finalPrice)) || Number(finalPrice) <= 0}\n                  helperText={finalPrice === '' ? 'Final price is required' : (isNaN(Number(finalPrice)) || Number(finalPrice) <= 0 ? 'Enter a valid price' : '')}\n                />\n                <TextField\n                  label=\"Feedback (optional)\"\n                  value={farmerFeedback}\n                  onChange={e => setFarmerFeedback(e.target.value)}\n                  fullWidth\n                  sx={{ mt: 2 }}\n                />\n                <Box sx={{ mt: 2 }}>\n                  <Button\n                    variant={didSell ? 'contained' : 'outlined'}\n                    color=\"success\"\n                    onClick={() => setDidSell(true)}\n                    sx={{ mr: 1 }}\n                  >\n                    Yes, I sold\n                  </Button>\n                  <Button\n                    variant={!didSell ? 'contained' : 'outlined'}\n                    color=\"error\"\n                    onClick={() => setDidSell(false)}\n                  >\n                    No, I did not sell\n                  </Button>\n                </Box>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={() => setShowFarmerConfirmDialog(false)}>Cancel</Button>\n                <Button onClick={handleFarmerConfirm} color=\"primary\">Submit</Button>\n              </DialogActions>\n            </Dialog>\n          </TabPanel>\n        )}\n\n\n      </Paper>\n    </Container>\n\n    {/* Edit Profile Dialog */}\n    <Dialog\n      open={isEditDialogOpen}\n      onClose={() => setIsEditDialogOpen(false)}\n      maxWidth=\"sm\"\n      fullWidth\n    >\n      <DialogTitle>{t('profile.editProfile')}</DialogTitle>\n      {/* Editable Avatar for profile image upload */}\n      <form onSubmit={handleEditSubmit}>\n        <DialogContent>\n          <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mt: 1, mb: 2 }}>\n            <EditableProfileAvatar\n              user={user}\n              onImageSelected={handleProfileImageSelected}\n              loading={profileImageUploading}\n              preview={profileImagePreview}\n              setProfileImagePreview={setProfileImagePreview}\n            />\n          </Box>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label={t('profile.name')}\n                name=\"name\"\n                value={editForm.name}\n                onChange={handleInputChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label={t('profile.email')}\n                name=\"email\"\n                type=\"email\"\n                value={editForm.email}\n                disabled\n                required\n                sx={{\n                  \"& .MuiInputBase-input\": {\n                    cursor: \"not-allowed\",\n                    color: \"text.disabled\",\n                  },\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label={t('profile.phone')}\n                name=\"phone\"\n                value={editForm.phone}\n                onChange={handleInputChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label={t('profile.street')}\n                name=\"address.street\"\n                value={editForm.address.street}\n                onChange={handleInputChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label={t('profile.district')}\n                name=\"address.district\"\n                value={editForm.address.district}\n                onChange={handleInputChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label={t('profile.state')}\n                name=\"address.state\"\n                value={editForm.address.state}\n                onChange={handleInputChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label={t('profile.zipCode')}\n                name=\"address.zipcode\"\n                value={editForm.address.zipcode}\n                onChange={handleInputChange}\n                required\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setIsEditDialogOpen(false)}>{t('profile.cancel')}</Button>\n          <Button type=\"submit\" variant=\"contained\">\n            {t('profile.saveChanges')}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n\n    {/* Delete Account Dialog */}\n    <Dialog\n      open={isDeleteDialogOpen}\n      onClose={() => setIsDeleteDialogOpen(false)}\n    >\n      <DialogTitle>{t('profile.deleteAccount')}</DialogTitle>\n      <DialogContent>\n        <Typography>\n          {t('profile.deleteAccountConfirm')}\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setIsDeleteDialogOpen(false)}>{t('profile.cancel')}</Button>\n        <Button\n          onClick={handleDeleteConfirm}\n          color=\"error\"\n          variant=\"contained\"\n        >\n          {t('profile.deleteAccount')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n\n    {/* Product Delete Confirmation Dialog */}\n    <Dialog\n      open={deleteProductDialogOpen}\n      onClose={() => setDeleteProductDialogOpen(false)}\n      maxWidth=\"sm\"\n      fullWidth\n    >\n      <DialogTitle>{t('profile.confirmProductDeletion')}</DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body1\">\n          {t('profile.confirmProductDeletionText')}\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => setDeleteProductDialogOpen(false)}\n          color=\"primary\"\n          variant=\"outlined\"\n        >\n          {t('profile.cancel')}\n        </Button>\n        <Button\n          onClick={handleConfirmDeleteProduct}\n          color=\"error\"\n          variant=\"contained\"\n        >\n          {t('profile.confirmDelete')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n    </>\n  );\n}\nexport default Profile;\n"],"names":["checkExistingContactRequest","farmerId","productId","timestamp","api","error","createContactRequest","requestedQuantity","_a","_b","_c","fetchMyContactRequests","acceptContactRequest","id","rejectContactRequest","registerUser","values","normalizeApiError","generateUsername","name","fetchUserProfile","updateProfile","editForm","deleteProfile","fetchMyProducts","config","fetchCategories","response","fetchProducts","params","addProduct","productData","deleteProduct","fetchDashboardData","confirmContactRequestAsUser","requestId","data","confirmContactRequestAsFarmer","adminLogin","username","password","deviceFingerprint","fetchAdminUsers","fetchAdminProducts","fetchAdminLogs","fetchAdminSettings","_interopRequireDefault","require$$0","Delete","_createSvgIcon","_jsxRuntime","require$$2","ImageUpload","images","onImagesChange","uploading","handleInputChange","e","files","readers","file","resolve","reject","reader","base64Images","Box","jsxs","Button","jsx","Stack","img","idx","IconButton","updated","DeleteIcon","Dashboard","Add","Inventory","AccessTime","LocalShipping","ShoppingCart","Person","CalendarToday","getRoleProfilePlaceholder","role","getProfileImageSrc","user","retryCount","setRetryCount","useState","theme","useTheme","navigate","useNavigate","t","useTranslation","tabValue","setTabValue","isProductDialogOpen","setIsProductDialogOpen","selectedProduct","setSelectedProduct","products","setProducts","setUploading","orders","setOrders","setUser","loading","setLoading","setError","openProductDialog","setOpenProductDialog","newProduct","setNewProduct","useEffect","errorMsg","toast","handleAddProduct","missingFields","submitProduct","err","product","CircularProgress","Container","Alert","renderFarmerDashboard","Grid","Paper","Typography","DashboardIcon","AddIcon","InventoryIcon","sum","p","AccessTimeIcon","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Avatar","Chip","LinearProgress","CalendarTodayIcon","renderVendorDashboard","ShoppingCartIcon","order","VisibilityIcon","Card","CardContent","CardActions","renderUserDashboard","PersonIcon","item","c","Dialog","DialogTitle","DialogContent","TextField","FormControl","InputLabel","Select","MenuItem","state","FormControlLabel","Switch","imgs","DialogActions","TabPanel","props","children","value","index","other","fileToBase64","EditableProfileAvatar","onImageSelected","preview","setProfileImagePreview","fileInputRef","useRef","getAvatarSrc","handleAvatarEditKeyDown","Tooltip","Edit","Profile","isEditDialogOpen","setIsEditDialogOpen","isDeleteDialogOpen","setIsDeleteDialogOpen","uploadedProducts","setUploadedProducts","contactRequests","setContactRequests","productsLoading","setProductsLoading","deleteProductDialogOpen","setDeleteProductDialogOpen","selectedProductId","setSelectedProductId","setEditForm","profileImageUploading","setProfileImageUploading","selectedProfileImage","setSelectedProfileImage","profileImagePreview","loadingIds","setLoadingIds","showUserConfirmDialog","setShowUserConfirmDialog","showFarmerConfirmDialog","setShowFarmerConfirmDialog","activeRequest","setActiveRequest","finalQuantity","setFinalQuantity","finalPrice","setFinalPrice","userFeedback","setUserFeedback","didBuy","setDidBuy","farmerFeedback","setFarmerFeedback","didSell","setDidSell","acceptingRequestId","setAcceptingRequestId","rejectingRequestId","setRejectingRequestId","checkAuth","loadInitialData","userData","requests","controller","prev","fetchUserProfileData","handleTabChange","event","newValue","handleEditClick","handleDeleteClick","refreshContactRequests","handleProfileImageSelected","handleEditSubmit","base64","message","handleDeleteProductClick","handleConfirmDeleteProduct","handleDeleteConfirm","getRoleLabel","parent","child","handleUserConfirm","handleFarmerConfirm","Fragment","Divider","List","ListItem","Email","ListItemText","Phone","LocationOn","Tabs","Tab","CardMedia","req"],"mappings":"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","x_google_ignoreList":[1,3,4,5,6,7,8,9,10]}